-- MySQL Script generated by MySQL Workbench
-- Mon Jan 20 23:39:06 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Inventory
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Inventory
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Inventory` DEFAULT CHARACTER SET utf8 ;
USE `Inventory` ;

-- -----------------------------------------------------
-- Table `Inventory`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Product` (
  `idProduct` INT NOT NULL,
  `name` VARCHAR(50) NULL,
  `sizes` VARCHAR(45) NULL,
  `color` VARCHAR(7) NULL,
  `buyPrice` DECIMAL(9,2) NULL,
  `minPrice` DECIMAL(9,2) NULL,
  `deliveryPrice` DECIMAL(9,2) NULL,
  PRIMARY KEY (`idProduct`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Customer_Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Customer_Category` (
  `idCategory` INT NOT NULL,
  `name` VARCHAR(30) NULL,
  PRIMARY KEY (`idCategory`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Customer` (
  `idCustomer` INT NOT NULL,
  `name` VARCHAR(100) NULL,
  `adress` VARCHAR(150) NULL,
  `birthDate` DATE NULL,
  `idCategory` INT NOT NULL,
  PRIMARY KEY (`idCustomer`),
  INDEX `fk_Customer_Customer_Category1_idx` (`idCategory` ASC),
  CONSTRAINT `fk_Customer_Customer_Category1`
    FOREIGN KEY (`idCategory`)
    REFERENCES `Inventory`.`Customer_Category` (`idCategory`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Invoice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Invoice` (
  `idInvoice` INT NOT NULL,
  `date` DATETIME NULL,
  `subtotal` DECIMAL(9,2) NULL,
  `total` DECIMAL(9,2) NULL,
  `idCustomer` INT NOT NULL,
  PRIMARY KEY (`idInvoice`),
  INDEX `fk_Invoice_Customer1_idx` (`idCustomer` ASC),
  CONSTRAINT `fk_Invoice_Customer1`
    FOREIGN KEY (`idCustomer`)
    REFERENCES `Inventory`.`Customer` (`idCustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Invoice_Detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Invoice_Detail` (
  `idDetail` INT NOT NULL,
  `quantity` INT NULL,
  `price` DECIMAL(9,2) NULL,
  `idInvoice` INT NOT NULL,
  `idProduct` INT NOT NULL,
  PRIMARY KEY (`idDetail`),
  INDEX `fk_Invoice_Detail_Invoice1_idx` (`idInvoice` ASC),
  INDEX `fk_Invoice_Detail_Product1_idx` (`idProduct` ASC),
  CONSTRAINT `fk_Invoice_Detail_Invoice1`
    FOREIGN KEY (`idInvoice`)
    REFERENCES `Inventory`.`Invoice` (`idInvoice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Invoice_Detail_Product1`
    FOREIGN KEY (`idProduct`)
    REFERENCES `Inventory`.`Product` (`idProduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Customer_Phone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Customer_Phone` (
  `idCustomer` INT NOT NULL,
  `phone` VARCHAR(30) NOT NULL,
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC),
  INDEX `fk_Customer_Phone_Customer1_idx` (`idCustomer` ASC),
  CONSTRAINT `fk_Customer_Phone_Customer1`
    FOREIGN KEY (`idCustomer`)
    REFERENCES `Inventory`.`Customer` (`idCustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Customer_Social`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Customer_Social` (
  `idCustomer` INT NOT NULL,
  `url` LONGTEXT NULL,
  INDEX `fk_Customer_Social_Customer1_idx` (`idCustomer` ASC),
  CONSTRAINT `fk_Customer_Social_Customer1`
    FOREIGN KEY (`idCustomer`)
    REFERENCES `Inventory`.`Customer` (`idCustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Provider`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Provider` (
  `idProvider` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `url` LONGTEXT NULL,
  PRIMARY KEY (`idProvider`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Provider_Social`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Provider_Social` (
  `iidProvider` INT NOT NULL,
  `image` LONGTEXT NULL,
  `link` LONGTEXT NULL,
  INDEX `fk_Provider_Social_Provider1_idx` (`iidProvider` ASC),
  CONSTRAINT `fk_Provider_Social_Provider1`
    FOREIGN KEY (`iidProvider`)
    REFERENCES `Inventory`.`Provider` (`idProvider`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Provider_Phone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Provider_Phone` (
  `idProvider` INT NOT NULL,
  `phone` VARCHAR(30) NOT NULL,
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC),
  INDEX `fk_Provider_Phone_Provider1_idx` (`idProvider` ASC),
  CONSTRAINT `fk_Provider_Phone_Provider1`
    FOREIGN KEY (`idProvider`)
    REFERENCES `Inventory`.`Provider` (`idProvider`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Purchase_Order_Status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Purchase_Order_Status` (
  `idStatus` INT NOT NULL,
  `name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idStatus`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Purchase_Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Purchase_Order` (
  `idPurchase` INT NOT NULL,
  `purchaseAmount` INT NULL,
  `receivedAmount` INT NULL,
  `price` DECIMAL(9,2) NULL,
  `orderDate` DATE NULL,
  `arrivalDate` DATE NULL,
  `idStatus` INT NOT NULL,
  `idProduct` INT NOT NULL,
  `idProvider` INT NOT NULL,
  PRIMARY KEY (`idPurchase`),
  INDEX `fk_Purchase_Order_Purchase_Order_Status1_idx` (`idStatus` ASC),
  INDEX `fk_Purchase_Order_Product1_idx` (`idProduct` ASC),
  INDEX `fk_Purchase_Order_Provider1_idx` (`idProvider` ASC),
  CONSTRAINT `fk_Purchase_Order_Purchase_Order_Status1`
    FOREIGN KEY (`idStatus`)
    REFERENCES `Inventory`.`Purchase_Order_Status` (`idStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Purchase_Order_Product1`
    FOREIGN KEY (`idProduct`)
    REFERENCES `Inventory`.`Product` (`idProduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Purchase_Order_Provider1`
    FOREIGN KEY (`idProvider`)
    REFERENCES `Inventory`.`Provider` (`idProvider`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Branch_Office`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Branch_Office` (
  `idBranch` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `adress` VARCHAR(150) NULL,
  `location` VARCHAR(45) NULL,
  `image` LONGTEXT NULL,
  `phone` VARCHAR(20) NULL,
  PRIMARY KEY (`idBranch`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Store`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Store` (
  `idStore` INT NOT NULL,
  `quantity` INT NULL,
  `idBranch` INT NOT NULL,
  `idProduct` INT NOT NULL,
  `Provider_idProvider` INT NOT NULL,
  PRIMARY KEY (`idStore`),
  INDEX `fk_Store_Branch_Office1_idx` (`idBranch` ASC),
  INDEX `fk_Store_Product1_idx` (`idProduct` ASC),
  INDEX `fk_Store_Provider1_idx` (`Provider_idProvider` ASC),
  CONSTRAINT `fk_Store_Branch_Office1`
    FOREIGN KEY (`idBranch`)
    REFERENCES `Inventory`.`Branch_Office` (`idBranch`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Store_Product1`
    FOREIGN KEY (`idProduct`)
    REFERENCES `Inventory`.`Product` (`idProduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Store_Provider1`
    FOREIGN KEY (`Provider_idProvider`)
    REFERENCES `Inventory`.`Provider` (`idProvider`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`User` (
  `idUser` INT NOT NULL,
  `Name` VARCHAR(150) NOT NULL,
  `userName` VARCHAR(45) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `password` VARCHAR(200) NOT NULL,
  `startDate` DATETIME NULL,
  `endDate` DATETIME NULL,
  PRIMARY KEY (`idUser`),
  UNIQUE INDEX `userName_UNIQUE` (`userName` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
